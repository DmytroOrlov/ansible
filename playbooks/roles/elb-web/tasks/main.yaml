- name: Gather facts for ire.web instance
  ec2_instance_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    filters:
      "tag:Name": ire.web
  register: ec2_facts
#- debug: var=ec2_facts
- name: Add all instance public IPs to host group
  add_host: hostname={{ item.public_ip_address }} groups=ec2hosts
  with_items: "{{ ec2_facts.instances }}"
  changed_when: False
- ec2_vpc_net_facts:
    region: "{{ region }}"
    #filters:
      #"tag:Name": ire.web
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: vpc
#- debug: var=vpc
- set_fact: vpc_id={{ vpc.vpcs[0].id }}
- elb_target_group:
    name: tg-web
    region: "{{ region }}"
    protocol: http
    port: 9000
    vpc_id: "{{ vpc_id }}"
    health_check_path: /health
    healthy_threshold_count: 2
    unhealthy_threshold_count: 2
    health_check_timeout: 2
    health_check_interval: 5
    targets: "{{ ec2_facts | json_query('instances[*].{Id: instance_id}') | map('combine', {'Port':9000}) | list }}"
    state: present
    wait_timeout: 120
    wait: True
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
- ec2_vpc_subnet_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc_id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: subnet
#- debug: msg={{ subnet | json_query('subnets[*].id') }}
- elb_application_lb:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: elb-web
    region: "{{ region }}"
    subnets: "{{ subnet | json_query('subnets[*].id') }}"
    security_groups:
      - web
    listeners:
      - Protocol: HTTP
        Port: 80
        DefaultActions:
          - Type: forward
            TargetGroupName: tg-web
    state: present
  register: elb
#- debug: var=elb
